name: "Build, Test & Release"

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  linux_tests:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        # NOTE: Python 3.12 should be tested if it's used for builds.
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          # Using a 2024 toolchain for better compatibility with modern Python/Rust
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install, Lint, and Test
        run: |
          make install
          make pre-commit
          make test

  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: [linux_tests]
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64
            manylinux: auto
          - os: ubuntu-22.04
            target: i686
            manylinux: auto
          - os: windows-latest
            target: x64
          - os: windows-latest
            target: x86
          - os: macos-latest
            target: x86_64
          - os: macos-latest
            target: aarch64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # UPDATING to the latest stable Python version
          python-version: "3.12"
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
          manylinux: ${{ matrix.manylinux || 'auto' }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    needs: [linux_tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  release:
    name: Release to PyPI
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-22.04
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*/*
