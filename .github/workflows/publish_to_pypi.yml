name: "Build, Test & Release"

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  linux_tests:
    runs-on: ubuntu-22.04
    # Runs tests inside a container to bypass the GitHub Actions incident
    container: python:3.12-slim
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust and Make inside the container
        run: |
          apt-get update
          apt-get install -y curl build-essential
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install, Lint, and Test
        run: |
          make install
          make pre-commit
          make test

  # +++ ADD THIS NEW JOB FOR LINUX WHEELS +++
  # This job will work during the GitHub incident.
  build_wheels_linux:
    name: Build wheels on Linux for ${{ matrix.target }}
    runs-on: ubuntu-22.04
    needs: [linux_tests]
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  # +++ ADD THIS NEW JOB FOR WINDOWS AND MACOS +++
  # This job will likely fail until the incident is over.
  build_wheels_native:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: [linux_tests]
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x64
          - os: windows-latest
            target: x86
          - os: macos-latest
            target: x86_64
          - os: macos-latest
            target: aarch64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    needs: [linux_tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  release:
    name: Release to PyPI
    if: "startsWith(github.ref, 'refs/tags/')"
    # UPDATED to depend on the new build jobs
    needs: [build_wheels_linux, build_wheels_native, build_sdist]
    runs-on: ubuntu-22.04
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*/*
